{{- if .Values.Azure.Identity.isEnabled }}
apiVersion: v1 
kind: ConfigMap 
metadata: 
  name: {{ template "sscdpa.fullname" . }}-mdm-config
  namespace: {{ .Release.Namespace }}
data: 
  mdmconfig.json: "{\"imdsInfo\":[{ \"account\": \"akvsecretsprovider\" }]}"
{{- end }}
---
{{- if .Values.linux.enabled}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "sscdpa.fullname" . }}
  namespace: {{ .Release.Namespace }}
{{ include "sscdpa.labels" . | indent 2 }}
spec:
  updateStrategy:
{{ toYaml .Values.linux.updateStrategy | indent 4 }}
  selector:
    matchLabels:
      app: {{ template "sscdpa.name" . }}
  template:
    metadata:
{{ include "sscdpa.labels" . | indent 6 }}
{{- if .Values.linux.podLabels }}
{{- toYaml .Values.linux.podLabels | nindent 8 }}
{{- end }}
{{- if or .Values.linux.podAnnotations .Values.Azure.proxySettings.isProxyEnabled .Values.Azure.Identity.isEnabled}}
      annotations:
{{- if .Values.linux.podAnnotations}}
{{- toYaml .Values.linux.podAnnotations | nindent 8 }}
{{- end }}
{{- if .Values.Azure.Identity.isEnabled }}
        prometheus.io/scrape: "true" 
        prometheus.io/port: "8898"
{{- end }}
# this will ensure pods are rolled in next helm upgrade if cert files are updated.
{{- if .Values.Azure.proxySettings.isProxyEnabled }}
        checksum/arc-proxy-config: {{ include (print $.Template.BasePath "/arc-proxy-secret.yaml") . | sha256sum }}
{{- end }}
{{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      serviceAccountName: csi-secrets-store-provider-azure
      hostNetwork: true
      containers:
        - name: provider-azure-installer
          image: "{{ .Values.linux.image.repository }}:{{ .Values.linux.image.tag }}"
          imagePullPolicy: {{ .Values.linux.image.pullPolicy }}
          args:
            - --endpoint=unix:///provider/azure.sock
            {{- if .Values.logFormatJSON }}
            - --log-format-json={{ .Values.logFormatJSON }}
            {{- end }}
            {{- if .Values.logVerbosity }}
            - -v={{ .Values.logVerbosity }}
            {{- end }}
            {{- if .Values.constructPEMChain }}
            - --construct-pem-chain={{ .Values.constructPEMChain }}
            {{- end }}
            {{- if .Values.linux.customUserAgent }}
            - --custom-user-agent={{ .Values.linux.customUserAgent }}
            {{- end }}
            - --healthz-port={{ .Values.linux.healthzPort }}
            - --healthz-path={{ .Values.linux.healthzPath }}
            - --healthz-timeout={{ .Values.linux.healthzTimeout }}
          livenessProbe:
            httpGet:
              path: {{ .Values.linux.healthzPath }}
              port: {{ .Values.linux.healthzPort }}
            failureThreshold: 3
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 30
          resources:
{{ toYaml .Values.linux.resources | indent 12 }}
          securityContext:
          {{- if not .Values.linux.privileged }}
            allowPrivilegeEscalation: false
          {{- end }}
            readOnlyRootFilesystem: true
            runAsUser: 0
            capabilities:
              drop:
              - ALL
          {{- if .Values.linux.privileged }}
            privileged: true
          {{- end }}
          {{- if .Values.Azure.proxySettings.isProxyEnabled }}
          envFrom:
            - secretRef:
                name: arc-proxy-config
          {{- end }}
          volumeMounts:
            - name: provider-vol
              mountPath: /provider
            {{- if .Values.linux.volumeMounts }}
            {{- toYaml .Values.linux.volumeMounts | nindent 12 }}
            {{- end}}
            {{- if  and .Values.Azure.proxySettings.isProxyEnabled .Values.Azure.proxySettings.proxyCert }}
            - mountPath: /etc/ssl/certs/proxy-cert.crt
              subPath: proxy-cert.crt
              name: proxy-certstore
            {{- end }}
{{/*
{{- if .Values.Azure.Identity.isEnabled }}
        - name: metrics
          image: stardotstar/provider-azure-arc-metrics-agent:v1.1.0-rc.0-linux-amd64
          imagePullPolicy: IfNotPresent
        - name: telegraf
          image: mcr.microsoft.com/oss/mirror/docker.io/library/telegraf:1.21
          imagePullPolicy: IfNotPresent
          volumeMounts: 
            - name: telegraf-conf
              mountPath: /etc/telegraf/telegraf.conf
              subPath: telegraf.conf
        - name: mdm
          image: linuxgeneva-microsoft.azurecr.io/genevamdm:master_20220216.1
          imagePullPolicy: IfNotPresent
          env: 
          - name: ROLEINSTANCE 
            valueFrom: 
              fieldRef: 
                fieldPath: spec.nodeName 
          - name: CONFIG_OVERRIDES_FILE 
            value: /tmp/geneva_mdm/mdmconfig.json
          - name: METRIC_ENDPOINT 
            value: https://az-int.int.microsoftmetrics.com/
          - name: MDM_INPUT 
            value: statsd_udp,statsd_tcp
          - name: MDM_LOG_LEVEL 
            value: "Info" 
          - name: ME_AZURE_ENV 
            value: "test"
          volumeMounts: 
            - name: mdm-config 
              mountPath: /tmp/geneva_mdm
        - name: msi-adapter
          image: azurearcfork8sdev.azurecr.io/arc-preview/msi-adapter:0.0.10 
          imagePullPolicy: IfNotPresent 
          env: 
          - name: TOKEN_NAMESPACE 
            value: azure-arc
          - name: EXTENSION_ARMID
            value: {{ .Values.Azure.Extension.ResourceId }}
          - name: EXTENSION_NAME 
            value: {{ .Values.Azure.Extension.Name }}
          - name: CLUSTER_TYPE 
            value: ConnectedClusters 
          - name: CLUSTER_IDENTITY 
            value: "false" 
          - name: MANAGED_IDENTITY_AUTH 
            value: "true" 
          - name: TEST_MODE 
            value: "false" 
          - name: TEST_FILE 
            value: "/data/token.json"
          securityContext: 
            capabilities: 
              add: 
               - NET_ADMIN
{{- end }}
*/}}
      affinity:
{{ toYaml .Values.linux.affinity | indent 8 }}
      {{- if .Values.linux.priorityClassName }}
      priorityClassName: {{ .Values.linux.priorityClassName | quote }}
      {{- end }}
      volumes:
        - name: provider-vol
          hostPath:
            path: {{ .Values.linux.providersDir }}
        {{- if .Values.linux.volumes }}
        {{- toYaml .Values.linux.volumes | nindent 8 }}
        {{- end}}
        {{- if  and .Values.Azure.proxySettings.isProxyEnabled .Values.Azure.proxySettings.proxyCert }}
        - name: proxy-certstore
          secret:
            secretName: arc-proxy-cert
        {{- end }}
{{/*
        {{- if .Values.Azure.Identity.isEnabled }}
        - name: mdm-config 
          configMap: 
            name: {{ template "sscdpa.fullname" . }}-mdm-config
        - name: telegraf-conf
          configMap:
            name: {{ template "sscdpa.arc.fullname" . }}-telegraf-config
        {{- end }}
*/}}
      nodeSelector:
        kubernetes.io/os: linux
{{- if .Values.linux.nodeSelector }}
{{- toYaml .Values.linux.nodeSelector | nindent 8 }}
{{- end }}
{{- with .Values.linux.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- end -}}
