{{/*
{{- if .Values.arc.isMonitoringEnabled }}
{{- if .Values.linux.enabled}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-conf
  namespace: {{ .Release.Namespace }}
data:
  fluentd.conf: |
{{ (tpl ( .Files.Get "config/fluentd-conf.tmpl") .) | indent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gcstenant-conf
  namespace: {{ .Release.Namespace }}
data:
  gcstenant1.json: {{ .Files.Get "config/geneva.json" | quote }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: geneva-service
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: azure-arc-k8s
    app.kubernetes.io/component: geneva-service
  annotations:
    description: {{ .Chart.Description }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: azure-arc-k8s
      app.kubernetes.io/component: geneva-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: azure-arc-k8s
        app.kubernetes.io/component: geneva-service
    spec:
      hostNetwork: true
      serviceAccountName: csi-secrets-store-provider-azure
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        # MDSD-PA
        - name: pipelineagent
          image: pipelineagent.azurecr.io/amacoreagent:3.0
          imagePullPolicy: IfNotPresent
          env:
          - name: MONITORING_GCS_AUTH_ID_TYPE
            value: AuthMSIToken
          - name: PA_TENANTS_DIR
            value: /etc/tenants
          - name: PA_GIG_BRIDGE_MODE
            value: "1"
          - name: PA_FLUENT_SOCKET_PORT
            value: "15000"
          - name: PA_TRACEFLAGS
            value: "4"
          - name: OTLP_DEBUG_VERBOSE
            value: "1"
          - name: MDSD_DEBUG_LOG_FLAGS
            value: "-T 0x2002"
          - name: TENANT
            value: "westus2"
          - name: ROLE
            value: "akvsecretsprovider"
          - name: ROLEINSTANCE
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MONITORING_TENANT
            value: "westus2"
          - name: MONITORING_ROLE
            value: "akvsecretsprovider"
          - name: MONITORING_ROLE_INSTANCE
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MONITORING_GCS_ENVIRONMENT
            value: "Test"
          - name: MONITORING_GCS_ACCOUNT
            value: "akvsecretsprovider"
          - name: MONITORING_GCS_REGION
            value: "westus2"
          - name: MONITORING_GCS_NAMESPACE
            value: "akvlogs"
          - name: MONITORING_CONFIG_VERSION
            value: "1.7"
          - name: MDSD_CONFIG_DIR
            value: /tmp
          - name: DOCKER_LOGGING
            value: "true"
          volumeMounts:
            - name: tenants-conf-vol
              mountPath: /etc/tenants
            - name: var-log-vol
              mountPath: /geneva/geneva_logs
            - name: mdsd-run-vol
              mountPath: /var/run/mdsd
        # FluentD
        - name: fluentd
          image: linuxgeneva-microsoft.azurecr.io/genevafluentd_td-agent:master_20210928.1	
          imagePullPolicy: IfNotPresent
          env:
            - name: FLUENTD_CONF
              value: /etc/fluentd/fluentd.conf
          volumeMounts:
            - name: fluentd-conf-vol
              mountPath: /etc/fluentd
            - name: fluentd-buffer-vol
              mountPath: "/var/log/td-agent"
            - name: mdsd-run-vol
              mountPath: "/var/run/mdsd"
            - name: docker-log-vol
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: var-log-vol
              mountPath: /var/log
            - name: run-journal-vol
              mountPath: /run/log/journal
              readOnly: true
        - name: msi-adapter
          image: azurearcfork8sdev.azurecr.io/arc-preview/msi-adapter:0.0.10    
          imagePullPolicy: IfNotPresent
          env:
            - name: TOKEN_NAMESPACE
              value: azure-arc
            - name: EXTENSION_ARMID
              value: {{ .Values.Azure.Extension.ResourceId }}
            - name: EXTENSION_NAME
              value: {{ .Values.Azure.Extension.Name }}
            - name: CLUSTER_TYPE 
              value: ConnectedClusters
            - name: CLUSTER_IDENTITY
              value: "true"
            - name: MANAGED_IDENTITY_AUTH
              value: "true"
            - name: TEST_MODE
              value: "false"
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
      volumes:
        - name: mdsd-run-vol
          emptyDir: {}        
        - name: var-log-vol
          hostPath:
            path: /var/log
        - name: run-journal-vol
          hostPath:
            path: /run/log/journal
        - name: fluentd-buffer-vol
          emptyDir: {}
        - name: docker-log-vol
          hostPath:
            path: /var/lib/docker/containers
        - name: fluentd-conf-vol
          configMap:
            name: fluentd-conf
        - name: tenants-conf-vol
          configMap:
            name: gcstenant-conf
---
apiVersion: v1
kind: Service
metadata:
  name: geneva-services
  namespace: {{ .Release.Namespace }}
  labels:
    app: geneva-services
spec:
  type: ClusterIP
  ports:
    - name: mds-fluentd-tcp
      protocol: TCP
      port: 8130
      targetPort: 8130
  selector:
    app.kubernetes.io/name: azure-arc-k8s
    app.kubernetes.io/component: geneva-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: geneva-reader
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: geneva-read-global
subjects:
  - kind: ServiceAccount
    name: csi-secrets-store-provider-azure
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: geneva-reader
  apiGroup: rbac.authorization.k8s.io
{{- end }}
{{- end }}
/*}}
