{{- if .Values.arc.isMonitoringEnabled }}
{{- if .Values.linux.enabled}}
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: fluentd-conf
#   namespace: {{ .Release.Namespace }}
# data:
#   fluentd.conf: {{ .Files.Get "config/fluentd-conf.conf" | quote }}
#   kubernetes.conf: {{ .Files.Get "config/fluentd-kubernetes-conf.conf" | quote }}

# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: gcstenant-conf
#   namespace: {{ .Release.Namespace }}
# data:
#   gcstenant1.json: {{ .Files.Get "config/gcstenant-conf.json" | quote }}
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sscdpa.arc.fullname" . }}-metrics-monitoring
  namespace: {{ .Release.Namespace }}
{{ include "sscdpa.arc.labels" . | indent 2 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "sscdpa.arc.fullname" . }}
  template:
    metadata:
{{ include "sscdpa.arc.labels" . | indent 6 }}
    spec:
      serviceAccountName: csi-secrets-store-provider-azure
      hostNetwork: true
      containers:
        - name: prom-mdm-converter
          image: "{{ .Values.arc.metrics.promMdmConverter.image.repository }}:{{ .Values.arc.metrics.promMdmConverter.image.tag }}"
          imagePullPolicy: {{ .Values.arc.metrics.promMdmConverter.image.pullPolicy }}
          env:
          - name: SERVER_PORT
            value: "{{ .Values.arc.metrics.telegraf.prometheusRemoteWritePort }}"
          - name: EXTENSION_RESOURCE_ID
            value: "{{ .Values.Azure.Extension.ResourceId }}"
          resources:
{{ toYaml .Values.linux.resources | indent 12 }}
        - name: mdm
          image: "{{ .Values.arc.metrics.mdm.image.repository }}:{{ .Values.arc.metrics.mdm.image.tag }}"
          imagePullPolicy: {{ .Values.arc.metrics.mdm.image.pullPolicy }}
          env: 
          - name: ROLEINSTANCE 
            valueFrom: 
              fieldRef: 
                fieldPath: spec.nodeName
          - name: CONFIG_OVERRIDES_FILE 
            value: /tmp/geneva_mdm/mdmconfig.json
          - name: METRIC_ENDPOINT 
            value: {{ .Values.arc.metrics.mdm.metricEndpoint }}
          - name: MDM_INPUT
            value: statsd_udp,statsd_tcp
          - name: MDM_LOG_LEVEL 
            value: "Debug" 
          - name: ME_AZURE_ENV 
            value: {{ .Values.arc.metrics.mdm.environment }}
          volumeMounts: 
            - name: mdm-config 
              mountPath: /tmp/geneva_mdm
          resources:
{{ toYaml .Values.linux.resources | indent 12 }}
        - name: msi-adapter
          image: "{{ .Values.arc.metrics.msiAdapter.image.repository }}:{{ .Values.arc.metrics.msiAdapter.image.tag }}"
          imagePullPolicy: {{ .Values.arc.metrics.msiAdapter.image.pullPolicy }}
          env: 
          - name: TOKEN_NAMESPACE 
            value: {{ .Release.Namespace }}
          - name: EXTENSION_ARMID
            value: {{ .Values.Azure.Extension.ResourceId }}
          - name: EXTENSION_NAME 
            value: {{ .Values.Azure.Extension.Name }}
          - name: CLUSTER_TYPE 
            value: ConnectedClusters 
          - name: CLUSTER_IDENTITY 
            value: "false" 
          - name: MANAGED_IDENTITY_AUTH 
            value: "true" 
          - name: TEST_MODE 
            value: "false"
          - name: LIVENESS_PROBE_ENABLED
            value: "true"
          resources:
{{ toYaml .Values.linux.resources | indent 12 }}
          securityContext: 
            capabilities: 
              add: 
               - NET_ADMIN 
        - name: telegraf
          image: "{{ .Values.arc.metrics.telegraf.image.repository }}:{{ .Values.arc.metrics.telegraf.image.tag }}"
          imagePullPolicy: {{ .Values.arc.metrics.telegraf.image.pullPolicy }}
          resources:
{{ toYaml .Values.linux.resources | indent 12 }}
          volumeMounts: 
            - name: telegraf-conf
              mountPath: /etc/telegraf/telegraf.conf
              subPath: telegraf.conf
        # # MDSD-PA 
        # - name: amacoreagent
        #   image: pipelineagent.azurecr.io/amacoreagent:3.0
        #   imagePullPolicy: IfNotPresent
        #   env:
        #   - name: MONITORING_GCS_AUTH_ID_TYPE
        #     value: AuthMSIToken
        #   - name: PA_TENANTS_DIR
        #     value: /etc/tenants
        #   - name: PA_GIG_BRIDGE_MODE
        #     value: "1"
        #   - name: PA_FLUENT_SOCKET_PORT
        #     value: "15000"
        #   - name: PA_TRACEFLAGS
        #     value: "4"
        #   - name: OTLP_DEBUG_VERBOSE
        #     value: "1"
        #   - name: FLUENTD_PORT
        #     value: "8130"
        #   - name: MDSD_DEBUG_LOG_FLAGS
        #     value: "-T 0x2002"
        #   - name: TENANT
        #     value: "westus2"
        #   - name: ROLE
        #     value: "akvsecretsprovider"
        #   - name: ROLEINSTANCE
        #     valueFrom:
        #       fieldRef:
        #         fieldPath: spec.nodeName
        #   - name: MONITORING_TENANT
        #     value: "westus2"
        #   - name: MONITORING_ROLE
        #     value: "akvsecretsprovider"
        #   - name: MONITORING_ROLE_INSTANCE
        #     valueFrom:
        #       fieldRef:
        #         fieldPath: spec.nodeName
        #   - name: MONITORING_GCS_ENVIRONMENT
        #     value: "Test"
        #   - name: MONITORING_GCS_ACCOUNT
        #     value: "akvsecretsprovider"
        #   - name: MONITORING_GCS_REGION
        #     value: "westus2"
        #   - name: MONITORING_GCS_NAMESPACE
        #     value: "akvsecretsprovider"
        #   - name: MONITORING_CONFIG_VERSION
        #     value: "1.4"
        #   - name: MDSD_CONFIG_DIR
        #     value: /tmp
        #   - name: DOCKER_LOGGING
        #     value: "true"
        #   volumeMounts:
        #     - name: tenants-conf-vol
        #       mountPath: /etc/tenants
        #     - name: var-log-vol
        #       mountPath: /geneva/geneva_logs
        #     - name: mdsd-run-vol
        #       mountPath: /var/run/mdsd
        # # FluentD
        # - name: fluentd
        #   image: linuxgeneva-microsoft.azurecr.io/genevafluentd_td-agent:master_20210928.1
        #   imagePullPolicy: IfNotPresent
        #   env:
        #     - name: FLUENTD_CONF
        #       value: /etc/fluentd/fluentd.conf
        #   volumeMounts:
        #     - name: fluentd-conf-vol
        #       mountPath: /etc/fluentd
        #     - name: fluentd-buffer-vol
        #       mountPath: "/var/log/td-agent"
        #     - name: mdsd-run-vol
        #       mountPath: "/var/run/mdsd"
        #     - name: docker-log-vol
        #       mountPath: /var/lib/docker/containers
        #       readOnly: true
        #     - name: var-log-vol
        #       mountPath: /var/log
        #     - name: run-journal-vol
        #       mountPath: /run/log/journal
        #       readOnly: true
      affinity:
{{ toYaml .Values.linux.affinity | indent 8 }}
      {{- if .Values.linux.priorityClassName }}
      priorityClassName: {{ .Values.linux.priorityClassName | quote }}
      {{- end }}
      volumes:
        - name: telegraf-conf
          configMap:
            name: {{ template "sscdpa.arc.fullname" . }}-telegraf-config
        - name: mdm-config 
          configMap: 
            name: {{ template "sscdpa.arc.fullname" . }}-mdm-config
        - name: mdsd-run-vol
          emptyDir: {}        
        - name: var-log-vol
          hostPath:
            path: /var/log
        - name: run-journal-vol
          hostPath:
            path: /run/log/journal
        - name: fluentd-buffer-vol
          emptyDir: {}
        - name: docker-log-vol
          hostPath:
            path: /var/lib/docker/containers
        - name: fluentd-conf-vol
          configMap:
            name: fluentd-conf
        - name: tenants-conf-vol
          configMap:
            name: gcstenant-conf
      nodeSelector:
        kubernetes.io/os: linux
{{- if .Values.linux.nodeSelector }}
{{- toYaml .Values.linux.nodeSelector | nindent 8 }}
{{- end }}
{{- with .Values.linux.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: geneva-services
#   namespace: {{ .Release.Namespace }}
#   labels:
#     app: geneva-services
# spec:
#   type: ClusterIP
#   ports:
#     - name: mds-fluentd-tcp
#       protocol: TCP
#       port: 8130
#       targetPort: 8130
#   selector:
#     app: {{ template "sscdpa.arc.fullname" . }}
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: geneva-reader
# rules:
# - apiGroups: [""]
#   resources: ["pods", "namespaces"]
#   verbs: ["get", "watch", "list"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: geneva-read-global
# subjects:
#   - kind: ServiceAccount
#     name: csi-secrets-store-provider-azure
#     namespace: {{ .Release.Namespace }}
# roleRef:
#   kind: ClusterRole
#   name: geneva-reader
#   apiGroup: rbac.authorization.k8s.io
# {{- end }}
# {{- end }}

