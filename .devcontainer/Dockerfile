#-------------------------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.
#-------------------------------------------------------------------------------------------------------------

FROM golang:1

# Avoid warnings by switching to noninteractive
ENV DEBIAN_FRONTEND=noninteractive
ENV JQ_VERSION='1.5'


# This Dockerfile adds a non-root user with sudo access. Use the "remoteUser"
# property in devcontainer.json to use it. On Linux, the container user's GID/UIDs
# will be updated to match your local UID/GID (when using the dockerFile property).
# See https://aka.ms/vscode-remote/containers/non-root-user for details.
ARG USERNAME=vscode
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Configure apt, install packages and tools
RUN apt-get update \
  && apt-get -y install --no-install-recommends apt-utils dialog 2>&1 \
  #
  # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed
  && apt-get -y install git openssh-client less iproute2 procps lsb-release \
  #
  # Install Go tools w/module support
  && mkdir -p /tmp/gotools \
  && cd /tmp/gotools \
  && GO111MODULE=on go get -v golang.org/x/tools/gopls@latest 2>&1 \
  && GO111MODULE=on go get -v \
      honnef.co/go/tools/...@latest \
      golang.org/x/tools/cmd/gorename@latest \
      golang.org/x/tools/cmd/goimports@latest \
      golang.org/x/tools/cmd/guru@latest \
      golang.org/x/lint/golint@latest \
      github.com/mdempsky/gocode@latest \
      github.com/cweill/gotests/...@latest \
      github.com/haya14busa/goplay/cmd/goplay@latest \
      github.com/sqs/goreturns@latest \
      github.com/josharian/impl@latest \
      github.com/davidrjenni/reftools/cmd/fillstruct@latest \
      github.com/uudashr/gopkgs/v2/cmd/gopkgs@latest  \
      github.com/ramya-rao-a/go-outline@latest  \
      github.com/acroca/go-symbols@latest  \
      github.com/godoctor/godoctor@latest  \
      github.com/rogpeppe/godef@latest  \
      github.com/zmb3/gogetdoc@latest \
      github.com/fatih/gomodifytags@latest  \
      github.com/mgechev/revive@latest  \
      github.com/go-delve/delve/cmd/dlv@latest 2>&1 \
  #
  # Install Go tools w/o module support
  && go get -v github.com/alecthomas/gometalinter 2>&1 \
  #
  # Install gocode-gomod
  && go get -x -d github.com/stamblerre/gocode 2>&1 \
  && go build -o gocode-gomod github.com/stamblerre/gocode \
  && mv gocode-gomod $GOPATH/bin/ \
  #
  # Install golangci-lint
  && curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin 2>&1 \
  #
  # Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.
  && groupadd --gid $USER_GID $USERNAME \
  && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
  # [Optional] Add sudo support
  && apt-get install -y sudo \
  && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
  && chmod 0440 /etc/sudoers.d/$USERNAME \
  # Add write permission for /go/pkg
  && chmod -R a+w /go/pkg


# Install jq utility
RUN wget --no-check-certificate https://raw.githubusercontent.com/stedolan/jq/master/sig/jq-release.key -O /tmp/jq-release.key && \
    wget --no-check-certificate https://raw.githubusercontent.com/stedolan/jq/master/sig/v${JQ_VERSION}/jq-linux64.asc -O /tmp/jq-linux64.asc && \
    wget --no-check-certificate https://github.com/stedolan/jq/releases/download/jq-${JQ_VERSION}/jq-linux64 -O /tmp/jq-linux64 && \
    gpg --import /tmp/jq-release.key && \
    gpg --verify /tmp/jq-linux64.asc /tmp/jq-linux64 && \
    cp /tmp/jq-linux64 /usr/bin/jq && \
    chmod +x /usr/bin/jq && \
    rm -f /tmp/jq-release.key && \
    rm -f /tmp/jq-linux64.asc && \
    rm -f /tmp/jq-linux64

#Install yq utility
RUN apt-key adv --no-tty --keyserver keyserver.ubuntu.com --recv-keys CC86BB64 \
  && apt-get install  -y software-properties-common \
  && add-apt-repository ppa:rmescandon/yq \
  && apt update \
  && apt install yq -y

# Install Azure CLI
RUN apt-get install -y apt-transport-https curl gnupg2 lsb-release \
    && echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main" > /etc/apt/sources.list.d/azure-cli.list \
    && curl -sL https://packages.microsoft.com/keys/microsoft.asc | apt-key add - 2>/dev/null \
    && apt-get update \
    && apt-get install -y azure-cli
# clean up
RUN apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/* /go/src /tmp/gotools\
    && rm -rf /tmp/downloads

# Update this to "on" or "off" as appropriate
ENV GO111MODULE=on

# Switch back to dialog for any ad-hoc use of apt-get
ENV DEBIAN_FRONTEND=dialog
