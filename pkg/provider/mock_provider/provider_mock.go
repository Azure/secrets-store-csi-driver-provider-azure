// Code generated by MockGen. DO NOT EDIT.
// Source: ../provider.go

// Package mock_provider is a generated GoMock package.
package mock_provider

import (
	os "os"
	reflect "reflect"

	types "github.com/Azure/secrets-store-csi-driver-provider-azure/pkg/provider/types"
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// GetSecretsStoreObjectContent mocks base method.
func (m *MockInterface) GetSecretsStoreObjectContent(ctx context.Context, attrib, secrets map[string]string, defaultFilePermission os.FileMode) ([]types.SecretFile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecretsStoreObjectContent", ctx, attrib, secrets, defaultFilePermission)
	ret0, _ := ret[0].([]types.SecretFile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecretsStoreObjectContent indicates an expected call of GetSecretsStoreObjectContent.
func (mr *MockInterfaceMockRecorder) GetSecretsStoreObjectContent(ctx, attrib, secrets, defaultFilePermission interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecretsStoreObjectContent", reflect.TypeOf((*MockInterface)(nil).GetSecretsStoreObjectContent), ctx, attrib, secrets, defaultFilePermission)
}
