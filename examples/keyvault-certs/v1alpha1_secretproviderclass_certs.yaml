apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: azure-certs
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "false"
    userAssignedIdentityID: ""
    keyvaultName: "kvname"
    objects: |
      array:
        - |
          objectName: cert1
          objectType: cert                      # Setting objectType: cert will fetch and write only the certificate from keyvault
          objectVersion: ""                     # [OPTIONAL] object versions, default to latest if empty
        - |
          objectName: cert1
          objectAlias: cert1-pub-key
          objectType: key                       # Setting objectType: key will fetch and write only the public key from keyvault
          objectVersion: ""                     # [OPTIONAL] object versions, default to latest if empty
        - |
          objectName: cert1
          objectAlias: cert1-secret
          objectType: secret                    # Setting objectType: secret will fetch and write the certificate and private key from keyvault. The private key and certificate are written to a single file.
          objectVersion: ""                     # [OPTIONAL] object versions, default to latest if empty
        - |
          objectName: cert2-pfx
          objectAlias: cert2-secret-pfx
          objectType: secret
          objectVersion: ""                     # [OPTIONAL] object versions, default to latest if empty
          objectFormat: pfx                     # [OPTIONAL] the format of the Azure Key Vault object, supported types are pem and pfx. objectFormat: pfx is only supported with objectType: secret and PKCS12 or ECC certificates. Default format for certificates is pem.
        - |
          objectName: cert2-pfx
          objectAlias: cert2-secret-pfx-binary
          objectType: secret
          objectVersion: ""                     # [OPTIONAL] object versions, default to latest if empty
          objectFormat: pfx
          objectEncoding: base64                # Setting object encoding to base64 and object format to pfx will fetch and write the base64 decoded pfx binary
    tenantId: "tid"                             # the tenant ID of the KeyVault
