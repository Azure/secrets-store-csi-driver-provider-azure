parameters:
  - name: clusterTypes
    type: object
  - name: osTypes
    type: object

jobs:
  - ${{ each clusterType in parameters.clusterTypes }}:
    - ${{ each osType in parameters.osTypes }}:
      - job:
        displayName: ${{ format('{0}/{1}', clusterType, osType) }}
        timeoutInMinutes: 45
        cancelTimeoutInMinutes: 5
        workspace:
          clean: all

        variables:
          - name: GOPATH
            value: '$(system.defaultWorkingDirectory)/gopath'
          - name: modulePath
            value: '$(GOPATH)/src/github.com/$(build.repository.name)'
          - name: CLUSTER_CONFIG
            value: ${{ format('{0}', osType) }}
          - name: CLUSTER_TYPE
            value: ${{ format('{0}', clusterType) }}
          - group: csi-secrets-store-e2e

        steps:
        - task: GoTool@0
          inputs:
            version: '1.14.1'

        - script: |
            sudo add-apt-repository ppa:rmescandon/yq && sudo apt-get -o Acquire::Retries=30 update && sudo apt-get install yq
            sudo apt-get -o Acquire::Retries=30 update && sudo apt-get -o Acquire::Retries=30 install -y bats
            bats --version

            curl -LO https://github.com/Azure/aks-engine/releases/download/v${AKS_ENGINE_VERSION}/aks-engine-v${AKS_ENGINE_VERSION}-linux-amd64.tar.gz
            tar -zxvf aks-engine-v$(AKS_ENGINE_VERSION)-linux-amd64.tar.gz
            chmod +x aks-engine-v$(AKS_ENGINE_VERSION)-linux-amd64/aks-engine
            sudo mv aks-engine-v$(AKS_ENGINE_VERSION)-linux-amd64/aks-engine /usr/local/bin/

            # Download kubectl
            curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/

            # Print aks-engine version
            aks-engine version
          displayName: 'Set up workspace and install dependencies'
          
        - template: templates/build-images.yaml
        - template: templates/aks-engine-setup.yaml
        - template: templates/aks-setup.yaml
        - template: templates/assign-user-identity.yaml
          parameters:
            identitySubscriptionID: $(SUBSCRIPTION_ID)

        - script: |
            kubectl create ns dev            
            make e2e-test
          displayName: "Run e2e tests"
          env:
            AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
            AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
            KEY_NAME: $(KEY_NAME)
            KEY_VERSION: $(KEY_VERSION)
            KEYVAULT_NAME: $(KEYVAULT_NAME)
            RESOURCE_GROUP: $(RESOURCE_GROUP)
            SECRET_NAME: $(SECRET_NAME)
            SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
            TENANT_ID: $(TENANT_ID)
            ${{ if eq(osType, 'windows') }}:
              TEST_WINDOWS: true

        - template: templates/teardown.yaml

        - template: templates/cleanup-images.yaml
