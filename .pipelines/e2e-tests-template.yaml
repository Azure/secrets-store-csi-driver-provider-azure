parameters:
  - name: clusterTypes
    type: object
  - name: osTypes
    type: object
  - name: testClusterUpgrade
    type: boolean
    default: false

jobs:
  - ${{ each clusterType in parameters.clusterTypes }}:
    - ${{ each osType in parameters.osTypes }}:
      - job:
        displayName: ${{ format('{0}/{1}', clusterType, osType) }}
        timeoutInMinutes: 60
        cancelTimeoutInMinutes: 5
        workspace:
          clean: all

        variables:
          - name: CLUSTER_CONFIG
            value: ${{ format('{0}', osType) }}
          - name: CLUSTER_TYPE
            value: ${{ format('{0}', clusterType) }}
          - group: csi-secrets-store-e2e

        steps:
        - task: GoTool@0
          inputs:
            version: 1.16

        - script: |
            # Download kubectl
            curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
          displayName: 'Install kubectl'
          
        - template: templates/build-images.yaml

        - ${{ if eq(clusterType, 'aks') }}:
          - template: templates/aks-setup.yaml

        - ${{ if eq(clusterType, 'aks-engine') }}:
          - template: templates/aks-engine-setup.yaml

        - template: templates/assign-user-identity.yaml
          parameters:
            identitySubscriptionID: $(SUBSCRIPTION_ID)

        - script: |
            export REGISTRY="${REGISTRY:-$(REGISTRY_NAME).azurecr.io/k8s/csi/secrets-store}"

            make e2e-test
          displayName: "Run e2e tests"
          env:
            AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
            AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
            KEY_NAME: $(KEY_NAME)
            KEY_VERSION: $(KEY_VERSION)
            KEYVAULT_NAME: $(KEYVAULT_NAME)
            RESOURCE_GROUP: $(RESOURCE_GROUP)
            SECRET_NAME: $(SECRET_NAME)
            SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
            TENANT_ID: $(TENANT_ID)
            IS_UPGRADE_TEST: ${{ parameters.testClusterUpgrade }}
            ${{ if eq(osType, 'windows') }}:
              TEST_WINDOWS: true

        - ${{ if and(parameters.testClusterUpgrade, eq(clusterType, 'aks')) }}:
          - template: templates/aks-upgrade.yaml

          - script: |
              export REGISTRY="${REGISTRY:-$(REGISTRY_NAME).azurecr.io/k8s/csi/secrets-store}"

              make e2e-test
            displayName: "Run e2e tests after cluster upgrade"
            env:
              AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
              AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
              KEY_NAME: $(KEY_NAME)
              KEY_VERSION: $(KEY_VERSION)
              KEYVAULT_NAME: $(KEYVAULT_NAME)
              RESOURCE_GROUP: $(RESOURCE_GROUP)
              SECRET_NAME: $(SECRET_NAME)
              SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
              TENANT_ID: $(TENANT_ID)
              IS_UPGRADE_TEST: ${{ parameters.testClusterUpgrade }}
              ${{ if eq(osType, 'windows') }}:
                TEST_WINDOWS: true

        - template: templates/teardown.yaml
        - template: templates/cleanup-images.yaml
