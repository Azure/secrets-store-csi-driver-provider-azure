parameters:
  - name: azureClusterName
    type: string
  - name: extensionVersion
    type: string
    default: ""
  - name: releaseTrain
    type: string
  - name: configurationSettings
    type: string

steps:
  - script: |
      echo "Installing extension..."
      echo "version - '${{ parameters.extensionVersion }}'"
      if [[ "${{ parameters.extensionVersion }}" != "" ]]; then
        EXTRA_ARGS="--version ${{ parameters.extensionVersion }}"
      fi
      az k8s-extension create \
      --name ${{ parameters.azureClusterName }} \
      --extension-type Microsoft.AzureKeyVaultSecretsProvider \
      --scope cluster \
      --cluster-name ${{ parameters.azureClusterName }} \
      --resource-group ${{ parameters.azureClusterName }} \
      --cluster-type connectedClusters \
      --release-train ${{ parameters.releaseTrain }} \
      --release-namespace kube-system \
      --configuration-settings ${{ parameters.configurationSettings }} \
      $EXTRA_ARGS

      # Arc extensions will go through different phases (Pending, Installed etc.) of installation. We want to make sure extension is 'Installed' before running e2e tests.
      echo "verifying extension install status..."
      for i in $(seq 1 30); do
        provisioningState=$(az k8s-extension show -c ${{ parameters.azureClusterName }} -t connectedClusters -n ${{ parameters.azureClusterName }} -g ${{ parameters.azureClusterName }} --query "provisioningState" -otsv)
        if [ "$provisioningState" == "Succeeded" ]; then
          echo "AzureKeyVaultSecretsProvider extension is 'Installed'"
          break
        else
          echo "Provisioning state: '$provisioningState'"
          sleep 2
        fi
      done
      if [ "$provisioningState" != "Succeeded" ]; then
        echo "failed to install extension."
        exit 1
      fi

      # validate if monitoring pod is Running
      echo "validating monitoring pod..."
      kubectl wait --for=condition=Ready pod -l app=arc-monitoring --timeout=1m -n kube-system

      helm ls -A
      helm get values ${{ parameters.azureClusterName }} -n kube-system
      kubectl get pods -n kube-system
      kubectl get pods -n azure-arc
    displayName: "install AzureKeyVaultSecretsProvider extension"
    condition: succeeded()
