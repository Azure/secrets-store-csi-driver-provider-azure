jobs:
  - job: e2e_arc_kind
    variables:
    - group: csi-secrets-store-e2e
    steps:
    - script: |
        az login -i > /dev/null
        az account set -s=$(SUBSCRIPTION_ID)
      displayName: "az login"
    - script: |
        az extension add --name connectedk8s
        az extension add --name k8s-extension
      displayName: "add cli extensions"
    - script: |
        make install-kubectl setup-kind
      displayName: "setup KinD"
    - script: |
        clusterName=sscd-arc-e2e-$(openssl rand -hex 6)
        echo "##vso[task.setvariable variable=AZURE_CLUSTER_NAME]clusterName"
        echo "Cluster name is set to - $clusterName"
        echo ${AZURE_CLUSTER_NAME}
      displayName: "set cluster name"
      condition: succeeded()
    - script: |
        az group create -n ${AZURE_CLUSTER_NAME} -l $(AZURE_CANARY_LOCATION)

        az connectedk8s connect -n ${AZURE_CLUSTER_NAME} -g ${AZURE_CLUSTER_NAME} --no-wait

        echo "verifying cluster connectivity..."
        for i in $(seq 1 25); do
          isProvisioned=$(az connectedk8s list --resource-group ${AZURE_CLUSTER_NAME} --query "[*].provisioningState" -otsv)
          isConnected=$(az connectedk8s list --resource-group ${AZURE_CLUSTER_NAME} --query "[*].connectivityStatus" -otsv)
          echo "Prov - $isProvisioned ===== Conn - $isConnected"
          if [ "$isProvisioned" == "Succeeded" ]  && [ "$isConnected" == "Connected" ]; then
            echo "KinD cluster is 'Connected'"
            break
          else
            sleep 1
          fi
        done
      displayName: "connect KinD cluster"
      condition: succeeded()
    - template: teardown.yaml