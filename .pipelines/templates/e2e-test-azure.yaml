parameters:
  - name: osTypes
    type: object
  - name: testClusterUpgrade
    type: boolean
    default: false
  - name: testWithGPU
    type: boolean
    default: false

jobs:
  - ${{ each osType in parameters.osTypes }}:
    - job:
      displayName: ${{ format('aks_{0}/gpu={1}', osType, parameters.testWithGPU) }}
      timeoutInMinutes: 120
      cancelTimeoutInMinutes: 5
      workspace:
        clean: all

      variables:
        - name: CLUSTER_CONFIG
          value: ${{ format('{0}', osType) }}
        - group: csi-secrets-store-e2e

      steps:
      - script: |
          OS_TYPE=$(echo ${{ osType }} | cut -d '_' -f1 | tr -d '[:space:]')
          echo "OS type: $OS_TYPE"
          echo "##vso[task.setvariable variable=OS_TYPE]$OS_TYPE"

          CONTAINER_RUNTIME=$(echo ${{ osType }} | cut -d '_' -f2 | tr -d '[:space:]')
          echo "Container Runtime: $CONTAINER_RUNTIME"
          echo "##vso[task.setvariable variable=CONTAINER_RUNTIME]$CONTAINER_RUNTIME"
        displayName: 'Determine os type and container runtime'

      - script: |
          # Download kubectl
          curl -LO https://dl.k8s.io/release/`curl -sL https://dl.k8s.io/release/stable.txt`/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
        displayName: 'Install kubectl'

      - template: build-images.yaml

      - template: aks-setup.yaml
        parameters:
          testClusterUpgrade: ${{ parameters.testClusterUpgrade }}
          testWithGPU: ${{ parameters.testWithGPU }}
          containerRuntime: $(CONTAINER_RUNTIME)

      - template: assign-user-identity.yaml
        parameters:
          identitySubscriptionID: $(SUBSCRIPTION_ID)

      - template: role-assignment.yaml

      # Run e2e tests with Released Version
      - template: e2e-test.yaml
        parameters:
          testName: "Run e2e test with Released Version"
          testClusterUpgrade: ${{ parameters.testClusterUpgrade }}
          resetImageVersion: true
          isBackwardCompatibilityTest: true
          testReleasedVersion: true
          testWithGPU: ${{ parameters.testWithGPU }}
          osType: $(OS_TYPE)

      # Run e2e tests with New Version
      - template: e2e-test.yaml
        parameters:
          testName: "Run e2e test with New Version"
          testClusterUpgrade: ${{ parameters.testClusterUpgrade }}
          isBackwardCompatibilityTest: true
          setRegistry: true
          testWithGPU: ${{ parameters.testWithGPU }}
          osType: $(OS_TYPE)

      - ${{ if eq(parameters.testClusterUpgrade, true) }}:
        - template: aks-upgrade.yaml

        # Run e2e tests after cluster upgrade
        - template: e2e-test.yaml
          parameters:
            testName: "Run e2e test with New Version"
            testClusterUpgrade: ${{ parameters.testClusterUpgrade }}
            setRegistry: true
            testWithGPU: ${{ parameters.testWithGPU }}
            osType: $(OS_TYPE)

        - template: aks-upgrade.yaml

        - template: e2e-test.yaml
          parameters:
            testName: "Run e2e test with New Version"
            testClusterUpgrade: ${{ parameters.testClusterUpgrade }}
            setRegistry: true
            testWithGPU: ${{ parameters.testWithGPU }}
            osType: $(OS_TYPE)

      - template: cleanup-role-assignments.yaml
      - template: teardown.yaml
      - template: cleanup-images.yaml
        parameters:
          imageVersion: $(IMAGE_VERSION)
          registryRepo: $(CI_PROVIDER_REPOSITORY)
          subscriptionId: $(SUBSCRIPTION_ID)
          registryName: $(REGISTRY_NAME)
